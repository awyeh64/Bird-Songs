{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 233,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import r2_score, mean_squared_error\n",
    "import seaborn as sns\n",
    "%matplotlib inline\n",
    "\n",
    "sns.set_style(\"whitegrid\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>duration</th>\n",
       "      <th>name</th>\n",
       "      <th>genus</th>\n",
       "      <th>latitude</th>\n",
       "      <th>location</th>\n",
       "      <th>longitude</th>\n",
       "      <th>species</th>\n",
       "      <th>type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>Abert's Towhee</td>\n",
       "      <td>Melozone</td>\n",
       "      <td>33.3117</td>\n",
       "      <td>Cibola National Wildlife Refuge, Cibola, Arizo...</td>\n",
       "      <td>-114.68912</td>\n",
       "      <td>aberti</td>\n",
       "      <td>'seet' call</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>Abert's Towhee</td>\n",
       "      <td>Melozone</td>\n",
       "      <td>34.2850</td>\n",
       "      <td>Bill Williams River NWR, Arizona, United States</td>\n",
       "      <td>-114.06900</td>\n",
       "      <td>aberti</td>\n",
       "      <td>call</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>Abert's Towhee</td>\n",
       "      <td>Melozone</td>\n",
       "      <td>34.2850</td>\n",
       "      <td>Bill Williams River NWR, Arizona, United States</td>\n",
       "      <td>-114.06900</td>\n",
       "      <td>aberti</td>\n",
       "      <td>Squeal duet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5</td>\n",
       "      <td>Abert's Towhee</td>\n",
       "      <td>Melozone</td>\n",
       "      <td>33.1188</td>\n",
       "      <td>Salton Sea, CA, United States</td>\n",
       "      <td>-115.79450</td>\n",
       "      <td>aberti</td>\n",
       "      <td>interaction duet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Abert's Towhee</td>\n",
       "      <td>Melozone</td>\n",
       "      <td>36.0628</td>\n",
       "      <td>Sunset Park, Las Vegas, Nevada, United States</td>\n",
       "      <td>-115.11280</td>\n",
       "      <td>aberti</td>\n",
       "      <td>call</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   duration            name     genus  latitude  \\\n",
       "0         3  Abert's Towhee  Melozone   33.3117   \n",
       "1         4  Abert's Towhee  Melozone   34.2850   \n",
       "2         4  Abert's Towhee  Melozone   34.2850   \n",
       "3         5  Abert's Towhee  Melozone   33.1188   \n",
       "4         5  Abert's Towhee  Melozone   36.0628   \n",
       "\n",
       "                                            location  longitude species  \\\n",
       "0  Cibola National Wildlife Refuge, Cibola, Arizo... -114.68912  aberti   \n",
       "1    Bill Williams River NWR, Arizona, United States -114.06900  aberti   \n",
       "2    Bill Williams River NWR, Arizona, United States -114.06900  aberti   \n",
       "3                      Salton Sea, CA, United States -115.79450  aberti   \n",
       "4      Sunset Park, Las Vegas, Nevada, United States -115.11280  aberti   \n",
       "\n",
       "               type  \n",
       "0       'seet' call  \n",
       "1              call  \n",
       "2       Squeal duet  \n",
       "3  interaction duet  \n",
       "4              call  "
      ]
     },
     "execution_count": 234,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('./xeno-canto_ca-nv_index.csv')\n",
    "df = df.drop(columns = ['Unnamed: 0','country','file_id','file_name','file_url','full_name','license','recordist','recordist_url','sonogram_url','remarks'])\n",
    "df = df.rename(columns={\"duration_seconds\": \"duration\", \"english_cname\": \"name\"})\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 235,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# Cleaning up the types into either a call or a song\n",
    "def type_clean (type_str):\n",
    "    call = ['call', 'chatter', 'male', 'squeal', '?', 'barks', 'tick' ,'gargle', 'chip', 'wing']\n",
    "    song = ['song', 'drumming', 'tapping', 'duet', 'display']\n",
    "\n",
    "    for i in song:\n",
    "        if i in type_str.lower():\n",
    "            return 'song'\n",
    "    for i in call:\n",
    "        if i in type_str.lower():\n",
    "            return 'call'\n",
    "    return type_str\n",
    "    \n",
    "df['type'] = df['type'].apply(type_clean);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 248,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, (ax1, ax2) = plt.subplots(ncols=2, sharey=True,sharex=True, figsize = (15,5))\n",
    "sns.distplot(df['duration'].loc[df['type'] == 'call'], color = 'red', norm_hist = True, bins = 15, kde = False, ax=ax1).set_title('Bird Call')\n",
    "sns.distplot(df['duration'].loc[df['type'] == 'song'], color = 'skyblue', norm_hist = True, bins = 15, kde = False, ax=ax2).set_title('Bird Song')\n",
    "plt.xlim(0, 175)\n",
    "\n",
    "fig, ax3 = plt.subplots(sharey=True, figsize = (15,5))\n",
    "sns.distplot(df['duration'].loc[df['type'] == 'call'], color = 'red', norm_hist = True, bins = 15, hist = False, ax=ax3, label = ('Bird Call'))\n",
    "sns.distplot(df['duration'].loc[df['type'] == 'song'], color = 'skyblue', norm_hist = True, bins = 15, hist = False, ax=ax3, label = ('Bird Song'))\n",
    "plt.legend();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 237,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize = (10,5))\n",
    "sns.boxplot(x = 'duration', y = 'type', data = df, ax=ax);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 238,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "22.099680511182108"
      ]
     },
     "execution_count": 238,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['duration'].loc[df['type'] == 'call'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 239,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "33.40944206008584"
      ]
     },
     "execution_count": 239,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['duration'].loc[df['type'] == 'song'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 240,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Cleaning up the types into either a call or a song\n",
    "def long_clean (long_str):\n",
    "    western = [-125, -110]\n",
    "    mountain = [-110, -101]\n",
    "    central = [-101, -89]\n",
    "    eastern = [-89, -67]\n",
    "    if long_str < western[1]:\n",
    "        return 'Western Region'\n",
    "    elif long_str < mountain[1]:\n",
    "        return 'Mountain Region'\n",
    "    elif long_str < central[1]:\n",
    "        return 'Central Region'\n",
    "    elif long_str < eastern[1]:\n",
    "        return 'Eastern Region'\n",
    "    else:\n",
    "        return 'Out of North America'\n",
    "\n",
    "    \n",
    "df['region'] = df['longitude'].apply(long_clean);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 243,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Western Region    2730\n",
       "Name: region, dtype: int64"
      ]
     },
     "execution_count": 243,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['region'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 246,
   "metadata": {},
   "outputs": [],
   "source": [
    "def lat_clean (lat_str):\n",
    "    division = 35\n",
    "    if lat_str < 35:\n",
    "        return \"SoCal\"\n",
    "    else:\n",
    "        return \"NorCal\"\n",
    "\n",
    "df['region'] = df['latitude'].apply(lat_clean);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 247,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SoCal     1526\n",
       "NorCal    1204\n",
       "Name: region, dtype: int64"
      ]
     },
     "execution_count": 247,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['region'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 250,
   "metadata": {},
   "outputs": [],
   "source": [
    "# name\n",
    "# genus\n",
    "# species\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
